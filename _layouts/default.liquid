<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{ page.title | default: site.title }}</title>
    <link rel="icon" type="image/png" href="/assets/images/favicon-32x32.png">
<meta name="description" content="A blog about overthinking analytically, foss apps and video games.">

<!-- GoatCounter tracking snippet -->
  <script data-goatcounter="https://ronynn.goatcounter.com/count" async src="//gc.zgo.at/count.js">
  </script>
    
    
    
    
    <link rel="stylesheet" href="{{ '/assets/css/milligram.css' | relative_url }}">
    <link rel="stylesheet" href="{{ '/assets/css/normalize.css' | relative_url }}">
    <link rel="alternate" type="application/rss+xml" title="{{ site.title }}" href="{{ '/feed.xml' | relative_url }}">
    
    
    <style>
      html, body {
        margin: 0;
        padding: 0;
        height: 100%;
        
      }
      
      body {
        padding: 2rem 2rem 0 2rem; /* padding: top, right, bottom (0), left */
      }
      
      
      #vanta-bg {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
      }
      
      
      header, main {
        margin: 1rem 0;
      }
      
     
      
      
      
      
      
      /* Navigation link spacing */
      .nav-link {
        margin: 2rem;
      }
      
      
      /* Dropdown styling */
      #theme-selector {
        color: var(--text);
        background-color: var(--input-bg);
        border: 1px solid var(--border);
        padding: 0.8rem;
        width:30%;
        margin-right:5%;
        float:left;
      }
      
      
      /* Code block styling */
      code {
        background: var(--input-bg);
        color: var(--text);
        border: 1px solid var(--border);
        border-radius: 0.4rem;
        font-size: 0.9em;
        padding: 0.2rem 0.4rem;
      }
      
          
      
      /* Code block styling for preformatted blocks */
      pre {
        background: var(--input-bg);
        color: var(--text);
        --border: 1px solid var(--border);
        border-radius: 0.4rem;
        padding: 1rem;
        overflow: auto;
        white-space: pre-wrap;
        word-wrap: break-word;
      }
      
      
      /* Override Markdown list styling: remove default bullet and use a dash */
      ul {
        list-style: none;
        padding-left: 0;
      }
      
      
      ul li:before {
        content: "- ";
        color: var(--text);
      }
      
      
      /* Posts list styling */
      .posts-list li {
        margin-bottom: 1rem;
      }
    </style>
  </head>
  
  
  <body data-theme="{{ site.default_theme | default: '' }}">
    
    
    <div id="vanta-bg"></div>
    
    
    <header>
      <h1>{{ site.title }}</h1>
      <p>{{ site.description }}</p>
      <select id="theme-selector">
        <option value="gruvbox">Gruvbox</option>
        <option value="monokai">Monokai</option>
        <option value="dracula">Dracula</option>
        <option value="nord">Nord</option>
        <option value="solarized">Solarized</option>
        <option value="catppuccin">Catppuccin</option>
        <option value="tokyo-night">Tokyo Night</option>
        <option value="everforest">Everforest</option>
        <option value="cupcake">Cupcake</option>
        <option value="">Default</option>
      </select>
      
      <button id="toggle-vanta" class="button">Turn Off 3D</button>
    </header>
    
    
    <main>
      {{ content }}
    </main>
    
    
    <!-- Three.js (approx. 600KB minified) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r134/three.min.js"></script>
    
    
    <!-- Vanta.js Dots (approx. 80KB minified) -->
    <script src="https://cdn.jsdelivr.net/npm/vanta@latest/dist/vanta.dots.min.js"></script>
    
    <script>
var vantaEffect;
var vantaOn = true;

function initVanta() {
  if (vantaEffect) vantaEffect.destroy();
  vantaEffect = VANTA.DOTS({
    el: "#vanta-bg",
    color: getComputedStyle(document.body).getPropertyValue('--button').trim() || 0x000000,
    backgroundColor: getComputedStyle(document.body).getPropertyValue('--bg').trim() || 0xffffff,
    scaleMobile: 1.00,
    showLines: false
  });
}

initVanta();

document.getElementById('toggle-vanta').addEventListener('click', function() {
  if (vantaOn) {
    if (vantaEffect) vantaEffect.destroy();
    vantaOn = false;
    this.textContent = "Turn On 3D";
  } else {
    initVanta();
    vantaOn = true;
    this.textContent = "Turn Off 3D";
  }
});

document.getElementById('theme-selector').addEventListener('change', function() {
        document.body.setAttribute('data-theme', this.value);
        initVanta();
      });
      
      
      // Retrieve saved settings from localStorage
var savedTheme = localStorage.getItem("theme");
var savedVantaState = localStorage.getItem("vantaOn");

// Set initial theme (if any)
if (savedTheme) {
  document.body.setAttribute('data-theme', savedTheme);
  var themeSelector = document.getElementById('theme-selector');
  if (themeSelector) themeSelector.value = savedTheme;
}

// Set initial Vanta state (default true)
var vantaOn = (savedVantaState === null) ? true : (savedVantaState === "true");
var vantaEffect;

function initVanta() {
  if (vantaEffect) vantaEffect.destroy();
  vantaEffect = VANTA.DOTS({
    el: "#vanta-bg",
    color: getComputedStyle(document.body).getPropertyValue('--button').trim() || 0x000000,
    backgroundColor: getComputedStyle(document.body).getPropertyValue('--bg').trim() || 0xffffff,
    scaleMobile: 1.00,
    showLines: false
  });
}

// Initialize Vanta only if vantaOn is true
if (vantaOn) {
  initVanta();
}
document.getElementById('toggle-vanta').textContent = vantaOn ? "Turn Off vanta" : "Turn On vanta";

document.getElementById('toggle-vanta').addEventListener('click', function() {
  if (vantaOn) {
    if (vantaEffect) vantaEffect.destroy();
    vantaOn = false;
    this.textContent = "Turn On vanta";
  } else {
    initVanta();
    vantaOn = true;
    this.textContent = "Turn Off vanta";
  }
  localStorage.setItem("vantaOn", vantaOn);
});

document.getElementById('theme-selector').addEventListener('change', function() {
  var selectedTheme = this.value;
  document.body.setAttribute('data-theme', selectedTheme);
  localStorage.setItem("theme", selectedTheme);
  // Only reinitialize Vanta if it's turned on
  if (vantaOn) {
    initVanta();
  }
});
      
      
    </script>
  </body>
</html>